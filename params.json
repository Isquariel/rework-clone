{"name":"Rework-clone","tagline":"Clone module for Rework","body":"# rework-clone\r\n\r\nThis module clones properties from one rule set to another, unlike\r\n[rework-inherit](https://github.com/reworkcss/rework-inherit) (rework.extend())\r\nwhich concatenates the selectors.\r\n\r\nDonâ€™t copy anything and everything! Think when you need to inherit and when to\r\nclone.\r\n\r\n## Example\r\n\r\n```css\r\n.a {\r\n  background: red\r\n}\r\n.b {\r\n  clone: .a;\r\n}\r\n```\r\n\r\nyields:\r\n\r\n```css\r\n.a {\r\n  background: red;\r\n}\r\n.b {\r\n  background: red;\r\n}\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nvar clone = require('rework-clone');\r\n\r\nvar css = rework(inputCSS)\r\n  .use(clone(options))\r\n  .toString();\r\n```\r\n\r\n### Options\r\n\r\nThis is only one option: `regexp` to replace.\r\n\r\n```js\r\nvar css = rework(inputCSS)\r\n  .use(clone({regexp: /^foo?$/}))\r\n  .toString();\r\n```\r\n\r\nIt will work with all `foo` properties.\r\n\r\n## License\r\n\r\nMIT\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}